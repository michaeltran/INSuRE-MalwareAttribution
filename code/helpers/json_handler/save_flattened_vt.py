import os
import glob
import json

from json_flattener_2 import JsonFlattener2

vt_json_files = glob.glob("../../../data/static_vt/*/*.json")
truncate = "../../../data/static_vt/"
flattened_directory = "../../../data/flattened_vt"

flattener = JsonFlattener2()
saved = 0
total_files = len(vt_json_files)
print("\n Saving all flattened json into directories")

for file in files:
    # Reading each globbed file flattening flattening
    # Then saving in mirrored directories
    # Output of percentage is shown
    with open(file) as f:
        doc = json.dumps(f)
        flat_doc = flattener.flatten_json_iterative_solution(doc)
        file_name = os.path.relpath(file, truncate)
        flat_doc_path = os.path.join(flattened_directory, truncate)
        json.dumps(file, flat_doc_path)
    done = int(50 * saved / total_files)
    sys.stdout.write(
        "\r[{}{}] {}%".format(
            "â–ˆ" * done, "." * (50 - done), int(100 * saved / total_files)
        )
    )
    sys.stdout.flush()
